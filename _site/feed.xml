<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-06-27T01:42:49-05:00</updated><id>http://localhost:4000/</id><title type="html">Keaton Grimmett</title><subtitle>Welcome to my web site! My name is Keaton and Im happy to have you here. Feel free to browse and read about my journey through computer science and other adventures.</subtitle><entry><title type="html">Auburn REU on Smart UAVs</title><link href="http://localhost:4000/jekyll/update/2018/06/27/Auburn-REU-On-Smart-UAVs.html" rel="alternate" type="text/html" title="Auburn REU on Smart UAVs" /><published>2018-06-27T00:27:58-05:00</published><updated>2018-06-27T00:27:58-05:00</updated><id>http://localhost:4000/jekyll/update/2018/06/27/Auburn-REU-On-Smart-UAVs</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/06/27/Auburn-REU-On-Smart-UAVs.html">&lt;p&gt;The Auburn Research Experience for Undergraduates for Smart UAVs allows students to conduct meaningful research and dive into the life of a graduate student. I am very grateful that I get to experience this eight week program with ten other intelligent and passionate students. I hope you enjoy learning more about this program.&lt;/p&gt;

&lt;p&gt;My Research!!
My team consisted of myself and two others. We used the deep learning algorithm A3C to develop navigation and object avoidance in simulated autonomous drones. Our main goal was to create intelligent autonomy and have the drones complete certain tasks. We used A3C for its asynchronous nature. This allowed us to run multiple agents at the same time thus optimizing our training process.  To accomplish this we had to complete a variety of tasks in a short amount of time. I used the Unreal game engine to create the simulated environments. I attempted to make them realistic so that the Reality Gap would hopefully be closed to some degree. We then used AirSim, a photo and physics realistic plug-in for Unreal by Microsoft, to control the drones. By combining AirSim and our custom built environments we were able to precisely train our drones in specific environments and situations.&lt;/p&gt;</content><author><name></name></author><summary type="html">The Auburn Research Experience for Undergraduates for Smart UAVs allows students to conduct meaningful research and dive into the life of a graduate student. I am very grateful that I get to experience this eight week program with ten other intelligent and passionate students. I hope you enjoy learning more about this program.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2018/06/24/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-06-24T19:38:58-05:00</published><updated>2018-06-24T19:38:58-05:00</updated><id>http://localhost:4000/jekyll/update/2018/06/24/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/06/24/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>